<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
  <title>Login - Wonder Kids</title>
  <link href="https://fonts.googleapis.com/css?family=Nunito:400,700&display=swap" rel="stylesheet">
  <style>
    html, body {
      margin: 0;
      font-family: 'Nunito', Arial, sans-serif;
      background: linear-gradient(135deg, #c5e0ff 0%, #e5d0f7 100%);
      min-height: 100vh;
      min-width: 100vw;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    body {
      transition: background .35s;
    }
    .container {
      position: relative;
      display: flex;
      flex-direction: column;
      width: 100%;
      max-width: 410px;
      background: rgba(255,255,255,0.95);
      border-radius: 2.5rem;
      box-shadow: 0 8px 40px #b993d655, 0 1.5px 0 #fff6;
      padding: 3.2rem 2.3rem 2.7rem 2.3rem;
      margin: 2rem 0;
      z-index: 2;
      animation: popin .7s cubic-bezier(.47,1.71,.55,.91);
    }
    @keyframes popin {
      0% { transform: scale(.85) translateY(40px); opacity:0;}
      80% { transform: scale(1.04) translateY(-5px); opacity:1;}
      100% { transform: scale(1) translateY(0);}
    }
    .mascot-holder {
      position: absolute; top: -75px; left: 50%; transform: translateX(-50%);
      z-index: 3;
      width: 115px; height: 128px;
      pointer-events: none;
      animation: mascotBounce 2.3s infinite alternate cubic-bezier(.71,1.54,.55,.97);
    }
    @keyframes mascotBounce {
      from { transform: translateX(-50%) translateY(-8px);}
      to   { transform: translateX(-50%) translateY(8px);}
    }
    .abacus-mascot {
      width: 115px; height: 128px; position:relative;
      display: flex; flex-direction: column; align-items: center; justify-content: center;
    }
    .abacus-body {
      width: 100%; height: 92px; position:relative;
      background: #e5ecff;
      border-radius: 28px;
      border: 3px solid #a0c8ff;
      display: flex; flex-direction: column; align-items: center; justify-content: center;
      box-shadow: 0 2px 10px #c3a2ff44;
    }
    .abacus-rod {
      width: 86px; height: 8px; background: #fff; border-radius: 6px; margin: 13px auto 0 auto;
      position:relative; box-shadow: 0 1px 4px #fff5;
    }
    .abacus-beads {
      display: flex; flex-direction: row; gap: 11px; margin-top: -12px; margin-bottom: -3px;
      justify-content: center;
    }
    .abacus-bead {
      width: 20px; height: 20px; background: #5aaaff; border-radius: 50%;
      border: 2px solid #d1e4ff;
      margin-top: 4px; margin-bottom: 2px;
      box-shadow: 0 2px 6px #fff8, 0 0 0 2px #b1e3fa;
      animation: beadUp 1.1s infinite alternate cubic-bezier(.8,1.44,.51,.88);
    }
    .abacus-bead:nth-child(2) { animation-delay: .18s;}
    .abacus-bead:nth-child(3) { animation-delay: .33s;}
    .abacus-bead:nth-child(4) { animation-delay: .5s;}
    @keyframes beadUp {
      from { transform: translateY(0);}
      to { transform: translateY(-7px);}
    }
    .mascot-face {
      position: absolute; left: 48px; top: 66px; width: 20px; height: 16px;
      background: #ffe680; border-radius: 47% 53% 70% 60%;
      display: flex; align-items: center; justify-content: center;
      box-shadow: 0 2px 8px #fff8, 0 0 0 3px #fff3;
    }
    .mascot-face:before {
      content: '';
      display: block;
      width: 4px; height: 4px;
      background: #222;
      border-radius: 50%;
      margin-right: 3px;
      margin-left: 2px;
      box-shadow: 9px 0 0 0 #222;
    }
    /* CUTE LOGIN FORM */
    h2 {
      font-size: clamp(20px, 5vw, 28px);
      text-align: center;
      margin-bottom: 22px;
      color: #4577ff;
      font-weight: 800;
      letter-spacing: .04em;
      text-shadow: 0 2px 0 #fff6;
    }
    input, .language-switch-inner button {
      padding: 13px 17px;
      margin-bottom: 15px;
      border-radius: 1.3rem;
      border: 1.7px solid #b0cdfc;
      width: 100%;
      font-size: 16px;
      background: #f7fbff;
      box-shadow: 0 1.5px 9px #c3dfff0a;
      transition: border .2s, background .2s, box-shadow .2s;
    }
    input:focus, .language-switch-inner button:focus, input:active {
      border: 2.2px solid #fd90d7;
      background: #fff3fa;
      outline: none;
      box-shadow: 0 2px 16px #fd90d729;
    }
    .password-wrapper {
      position: relative;
      width: 100%;
    }
    .password-wrapper input { padding-right: 46px; }
    .toggle-password {
      position: absolute; right: 10px; top: 50%;
      transform: translateY(-50%);
      background: none;
      border: none;
      cursor: pointer;
      padding: 0;
      width: 33px; height: 33px;
      display: flex; align-items: center; justify-content: center;
      border-radius: 50%;
      transition: background .18s;
    }
    .toggle-password:hover, .toggle-password:active { background: #fde2fa; }
    .toggle-password svg {
      width: 22px; height: 22px;
      color: #839aff;
      opacity: 0.84;
    }
    button, .language-switch-inner button {
      background: linear-gradient(90deg, #67aaff 0%, #b993d6 100%);
      color: #fff; font-size: 1.17rem;
      border-radius: 1.7rem;
      font-weight: 800;
      border: none;
      box-shadow: 0 3px 15px #b993d622, 0 0 0 #fff0;
      cursor: pointer;
      transition: background .18s, transform .14s;
      outline: none;
      margin-top: 2px;
    }
    button:active, .language-switch-inner button:active {
      background: linear-gradient(90deg, #fd90d7 0%, #ffbeef 100%);
      color: #fff;
      transform: scale(0.97);
    }
    .remember-forgot {
      display: flex;
      justify-content: space-between;
      align-items: center;
      font-size: 15px;
      margin-bottom: 16px;
    }
    .remember-label {
      display: flex; align-items: center; gap: 7px; white-space: nowrap; cursor: pointer;
      user-select: none; font-weight: 600; color: #6d82a5;
    }
    .remember-label input[type="checkbox"] {
      accent-color: #67aaff;
      width: 19px; height: 19px; vertical-align: middle; margin-top: 2px;
      border-radius: 5px; border: 1.3px solid #67aaff;
    }
    .forgot-link {
      color: #a86ec7;
      cursor: pointer;
      text-decoration: none;
      font-size: 15px;
      transition: text-decoration 0.2s;
    }
    .forgot-link:hover { text-decoration: underline; }
    .language-switch-inner {
      margin: 12px 0 0 0; display: flex; justify-content: center;
    }
    .toggle {
      text-align: center;
      margin-top: 13px;
      font-size: 15px;
      color: #888;
    }
    .toggle a {
      color: #fd90d7;
      cursor: pointer;
      text-decoration: none;
      font-weight: 700;
      font-size: 1em;
    }
    .toggle a:hover { text-decoration: underline; }
    @media (max-width: 600px) {
      .container { max-width: 97vw; padding: 2rem 1rem 2rem 1rem; }
      .mascot-holder { width: 92px; height: 104px; top: -60px; }
      .abacus-mascot { width: 92px; height: 104px; }
      h2 { font-size: 1.15em;}
    }
  </style>
</head>
<body>
  <!-- Smiley Soroban Mascot -->
  <div class="mascot-holder">
    <div class="abacus-mascot">
      <div class="abacus-body">
        <div class="abacus-rod"></div>
        <div class="abacus-beads">
          <div class="abacus-bead"></div>
          <div class="abacus-bead"></div>
          <div class="abacus-bead"></div>
          <div class="abacus-bead"></div>
        </div>
        <div class="abacus-rod"></div>
      </div>
      <div class="mascot-face"></div>
    </div>
  </div>
  <div class="container">
    <h2 id="formTitle">Sign In</h2>
    <input type="text" id="username" placeholder="Username or email" autocomplete="username" />
    <div class="password-wrapper">
      <input type="password" id="password" placeholder="Password" autocomplete="current-password" />
      <button type="button" class="toggle-password" tabindex="-1" onclick="togglePassword()">
        <svg id="eyeIcon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
           d="M1.5 12C3.5 7.5 8 4.5 12 4.5c4 0 8.5 3 10.5 7.5-2 4.5-6.5 7.5-10.5 7.5S3.5 16.5 1.5 12zm10.5 3a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
        </svg>
      </button>
    </div>
    <div class="remember-forgot">
      <label class="remember-label">
        <input type="checkbox" id="remember">
        <span>Remember me</span>
      </label>
      <a class="forgot-link" tabindex="0">Forgot password?</a>
    </div>
    <button onclick="submitForm()" id="submitBtn">Sign In</button>
    <div class="language-switch-inner">
      <button onclick="toggleLanguage()" id="langBtn">EN / TH</button>
    </div>
    <div class="toggle" id="toggleText">
      New here? <a onclick="toggleMode()">Create an Account</a>
    </div>
  </div>
  <script>
    let mode = 'signin';
    let passwordShown = false;

    const translations = {
      en: { signin: "Sign In", signup: "Sign Up", create: "Create an Account", have: "Already have an account?" },
      th: { signin: "เข้าสู่ระบบ", signup: "สมัครสมาชิก", create: "สร้างบัญชี", have: "มีบัญชีอยู่แล้ว?" }
    };

    function togglePassword() {
      const pwd = document.getElementById('password');
      const eye = document.getElementById('eyeIcon');
      if (pwd.type === 'password') {
        pwd.type = 'text';
        eye.innerHTML = '<path stroke-width="2" stroke-linecap="round" stroke-linejoin="round" d="M1.5 12C3.5 7.5 8 4.5 12 4.5c4 0 8.5 3 10.5 7.5-2 4.5-6.5 7.5-10.5 7.5S3.5 16.5 1.5 12zm4 5.5L20 4M3 20l18-16" />';
      } else {
        pwd.type = 'password';
        eye.innerHTML = '<path stroke-width="2" stroke-linecap="round" stroke-linejoin="round" d="M1.5 12C3.5 7.5 8 4.5 12 4.5c4 0 8.5 3 10.5 7.5-2 4.5-6.5 7.5-10.5 7.5S3.5 16.5 1.5 12zm10.5 3a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>';
      }
    }

    function toggleLanguage() {
      const lang = localStorage.getItem('lang') === 'th' ? 'en' : 'th';
      setLanguage(lang);
    }

    function setLanguage(lang) {
      localStorage.setItem('lang', lang);
      const t = translations[lang];
      document.getElementById('formTitle').textContent = mode === 'signin' ? t.signin : t.signup;
      document.getElementById('submitBtn').textContent = mode === 'signin' ? t.signin : t.signup;
      document.getElementById('toggleText').innerHTML =
        mode === 'signin' ? `New here? <a onclick="toggleMode()">${t.create}</a>` : `${t.have} <a onclick="toggleMode()">${t.signin}</a>`;
      document.getElementById('langBtn').textContent = lang === 'en' ? 'EN / TH' : 'TH / EN';
    }

    function toggleMode() {
      mode = mode === 'signin' ? 'signup' : 'signin';
      const lang = localStorage.getItem('lang') || 'en';
      setLanguage(lang);
    }

    function submitForm() {
      const username = document.getElementById('username').value.trim();
      const password = document.getElementById('password').value.trim();
      const remember = document.getElementById('remember').checked;
      const key = `user_${username}`;

      if (!username || !password) return alert('Please fill in all fields.');

      if (mode === 'signin') {
        const stored = localStorage.getItem(key);
        if (!stored) return alert('Account not found. Please sign up first.');
        if (stored !== password) return alert('Incorrect password.');
        const user = { username };
        localStorage.setItem('loggedInUser', JSON.stringify(user));
        if (remember) localStorage.setItem('rememberMe', JSON.stringify(user));
        // REDIRECT TO home.html after login:
        window.location.href = 'home.html';
      } else {
        if (localStorage.getItem(key)) return alert('Username already exists.');
        localStorage.setItem(key, password);
        alert('Account created! You can now sign in.');
        toggleMode();
      }
    }

    window.onload = () => {
      const lang = localStorage.getItem('lang') || 'en';
      setLanguage(lang);
    };
  </script>
</body>
</html>
